@{
    ViewData["Title"] = "HRO-SMA";
}

@model WeatherUpdateViewModel


<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.50.0/mapbox-gl.css' rel='stylesheet'/>
<h1>Smart things weerstation server.</h1>
<div class="alert alert-info">Deze website is op dit moment nog onder constructie. Meld fouten op <a href="https://github.com/hro-sma/weather-station-server">onze Github</a> </div>

<div id='map2'></div>


@section Scripts {

    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.50.0/mapbox-gl.js'></script>
    <script>
        mapboxgl.accessToken =
            'pk.eyJ1IjoiaDQwOTk5NzkiLCJhIjoiY2pueDVybHk1MG56YjNwcnpjcjc2cThhaCJ9.DDkVVzYzBw-1SA2o6hkXug';

        var map = new mapboxgl.Map({
            container: 'map2',
            style: 'mapbox://styles/mapbox/streets-v9',
            center: [5, 52],
            zoom: 7
        });

    </script>
    
    @{
        foreach (var test in Model.LatestUpdates)
        {
            <script>

                // create the popup
                var popup = new mapboxgl.Popup({ offset: 25 })
                    .setText("@test.Device.DeviceName" +
                        " " +
                        @test.TemperatureC +
                        " " +
                        @test.Windspeed +
                        " " +
                        @test.Humidity +
                        " " +
                        @test.Windspeed);


                geocoder.mapboxClient
                    .geocodeReverse({
                        latitude: @test.Device.Latitude, 
                        longitude: @test.Device.Longitude
                    }, function(err, res) {
                        console.log(err, res)
                    });
//
//                new mapboxgl.Marker()
//                    .setLngLat([@test.Device.Longitude, @test.Device.Latitude])
//                    .setPopup(popup) // sets a popup on this marker
//                    .addTo(map);

                var marker = new mapboxgl.Marker()
                    .setLngLat([@test.Device.Longitude, @test.Device.Latitude])
                    .setPopup(popup) // sets a popup on this marker
                    .addTo(map);

            </script>
        }
    }
}